Prompt : When would you want to use a remote repository rather than keeping all your work local?

I'll prefer to use a remote repository instead of a local one, when I have a multiuser team working together.
Also, it would be helpful when I have multiple machines on which I do my work.



Prompt : Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

When working on a team process, I may not require the changes immediately. 
As a result, it is better to have manual sync. 


Prompt : Describe the differences between forks, clones, and branches. When would you use one instead of another?

Fork is when I want to clone some repository, but also give credit to the user.
Clone is when I want a repository on my system, from GitHub. 
branches is when I have don;t have required permissions, or I want to add additional features. 



Prompt : What is the benefit of having a copy of the last known state of the remote stored locally?

I can track where I was, when I stopped working, and I can continue from there. 




Prompt : How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

I don't know. I guess we'll have to share all our codes with each other, which would be very difficult, cumbersome,
and time consuming. Also, it will be practically very inefficient, since even if a slight change is made, it will have to be 
shared with all the team members. 




Prompt : When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
I would make changes in a separate branch, when I am making some improvements on a project on which my team
is working. This way, even if I break it somehow, the deployed product(master branch) can continue to work fine. 





